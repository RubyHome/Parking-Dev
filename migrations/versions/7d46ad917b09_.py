"""empty message

Revision ID: 7d46ad917b09
Revises: None
Create Date: 2016-05-25 14:07:01.281041

"""

# revision identifiers, used by Alembic.
revision = '7d46ad917b09'
down_revision = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=80), nullable=False),
    sa.Column('password', sa.String(length=128), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('first_name', sa.String(length=30), nullable=True),
    sa.Column('last_name', sa.String(length=30), nullable=True),
    sa.Column('address', sa.String(length=50), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('admin', sa.Boolean(), nullable=False),
    sa.Column('confirmed', sa.Boolean(), nullable=False),
    sa.Column('confirmed_on', sa.DateTime(), nullable=True),
    sa.Column('is_banned', sa.Boolean(), nullable=True),
    sa.Column('spot_id', sa.String(length=50), nullable=True),
    sa.Column('dest_id', sa.String(length=50), nullable=True),
    sa.Column('place_id', sa.String(length=50), nullable=True),
    sa.Column('spot_avail', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.String(length=80), nullable=False),
    sa.Column('longitude', sa.String(length=80), nullable=False),
    sa.Column('mapbox_place_name', sa.String(length=1024), nullable=True),
    sa.Column('street_name', sa.Unicode(length=1024), nullable=True),
    sa.Column('street_number', sa.Unicode(length=1024), nullable=True),
    sa.Column('building_number', sa.Unicode(length=1024), nullable=True),
    sa.Column('cross_street', sa.Unicode(length=1024), nullable=True),
    sa.Column('suite_number', sa.Unicode(length=1024), nullable=True),
    sa.Column('neighborhood', sa.Unicode(length=1024), nullable=True),
    sa.Column('district', sa.Unicode(length=1024), nullable=True),
    sa.Column('county', sa.Unicode(length=1024), nullable=True),
    sa.Column('country', sa.Unicode(length=1024), nullable=True),
    sa.Column('provence', sa.Unicode(length=1024), nullable=True),
    sa.Column('phone', sa.Unicode(length=10), nullable=True),
    sa.Column('state', sa.Unicode(length=1024), nullable=True),
    sa.Column('postal_code', sa.Unicode(length=1024), nullable=False),
    sa.Column('name', sa.Unicode(length=1024), nullable=True),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('is_dest', sa.Boolean(), nullable=True),
    sa.Column('is_avail', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('address_distance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address_a_id', sa.Integer(), nullable=False),
    sa.Column('address_b_id', sa.Integer(), nullable=False),
    sa.Column('mapbox_response', sa.Text(), nullable=False),
    sa.Column('speed_scala', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['address_a_id'], ['address.id'], ),
    sa.ForeignKeyConstraint(['address_b_id'], ['address.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('address_distance')
    op.drop_table('roles')
    op.drop_table('address')
    op.drop_table('users')
    ### end Alembic commands ###
